{"id":"kPmxWhsry5eSsYSrw0Pn","created_at":1734628247927,"created_by":"4070567438","updated_at":1736793422363,"updated_by":"5163072938","deleted_at":null,"display_name":"FDLC - Retail Style Picker","version":3,"account_id":"47690390","public":true,"status":"ACTIVE","template":false,"template_group":"community","use_case":"data_collection","cloned_from":null,"cb_tile_metadata":null,"description":null,"agent_widget_enabled":false,"agent_widget_skills":[],"nodes":[{"id":"ConcurrentChain-Y7xYmk","type":"ConcurrentChain","data":{"memory":{"show":true,"value":null},"post_process_function":{"show":true,"value":"def process_llm_response(llm_results: dict) -> str:\n  extract_variable_response = llm_results['capture_variables']['output']\n  next_question_response = llm_results['get_next_question']['output']\n\n  return f\"{next_question_response}\""},"chain":{"show":true,"value":null},"output_key":{"show":false,"value":"output"},"input_key":{"show":false,"value":"input"}},"position":{"x":997.9541998318068,"y":174.49868472586343},"base_type":"chain","disabled":false},{"id":"ExtractionChain-OLjA44","type":"ExtractionChain","data":{"name":{"show":true,"value":"capture_variables"},"memory":{"show":false,"value":null},"map_to_memory_function":{"show":true,"value":"def map_to_memory(chain_response_schema: list) -> dict[str, str]:\n  memory_dict = {}\n  for item in chain_response_schema:\n    key = item.get('name', None)\n    value = item.get('answer', None)\n    if key is not None and value is not None:\n      memory_dict[key] = value\n\n  return memory_dict"},"schema":{"show":true,"value":"{\n  \"properties\": {\n    \"answer\": {\n      \"type\": \"string\",\n      \"description\": \"the value of the variable as identified from the conversation according to the description provided, converted to the format specified\"\n    },\n    \"format\": {\n      \"type\": \"string\",\n      \"description\": \"the format to convert to\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"the variable name\"\n    }\n  },\n  \"required\": [\"format\", \"name\"]\n}\n"},"prompt_template":{"show":true,"value":null},"llm":{"show":true,"value":null}},"position":{"x":512.3836631154854,"y":-361.0039180756052},"base_type":"chain","disabled":false},{"id":"LLMChain-agLPAT","type":"LLMChain","data":{"name":{"show":true,"value":"get_next_question"},"save_output":{"show":false,"value":false},"memory":{"show":false,"value":null},"prompt":{"show":true,"value":null},"output_key":{"show":false,"value":"output"},"llm":{"show":true,"value":null}},"position":{"x":503.1905279995765,"y":191.93423164100795},"base_type":"chain","disabled":false},{"id":"LPPrompt-dxZHUx","type":"LPPrompt","data":{"input_variables":{"show":false,"value":"conversation_variables_model, primer"},"template":{"show":true,"value":"Your task is to capture the request context variables based on the conversation so far. Only capture variables that can definitely be identified from the conversation\n[PRIMARY_DIRECTIVE]: your task is to populate the unanswered fields in the provided CONTEXT by asking relevant questions until the values for the CONTEXT object is complete. Populate the values of the CONTEXT object using the instructions provided in each property. Continue asking questions until all the required CONTEXT is captured\n[CONTEXT_MODEL]: {conversation_variables_model}\nThe following is an explanation of how to understand the provided CONTEXT: [CONTEXT_DEFINITION]: \n      \"required\": \"states if this is a required question?\",\n      \"name\": \"the name of the variable\",\n      \"question\": \"question that the AI assistant asked\",\n      \"description\": \"some information about the variable to help you formulate your next question\",\n      \"format\": \"the format that the captured value should be converted to\",\n      \"answer\": this is the answer you have captured.\n{primer}\n"},"prompt_library_version":{"show":false,"value":null},"prompt_library_id":{"show":false,"value":null}},"position":{"x":106.45656407762908,"y":-314.81507422169494},"base_type":"prompt","disabled":false},{"id":"LPPrompt-z5zlY3","type":"LPPrompt","data":{"input_variables":{"show":false,"value":"conversation_variables_model, primer, persona, rules, task"},"template":{"show":true,"value":"[PRIMARY_DIRECTIVE]: Your key objective is to populate the answers in CONTEXT (i.e. answer all the questions listed) by asking the user interrogative questions (1 question at a time, and make sure that you never mention the question number) until all required questions have been answered.\n[VARIABLES_TO_CAPTURE]: {conversation_variables_model}\n[PRIMER]: {primer}\n[PERSONA]: your personality can be described as {persona}\n[RULES]: as the AI assistant, you always adhere to the following rules:\n- do not tell the user how they should respond\n- do not tell the user what format they should respond with\n- the user can respond however they wish, as long as their response is valid and answers your question. For example, you should NEVER tell the customer to provide a date in 'DD-MM-YYY', just ask for the date and accept a valid response, such as 'yesterday', '2 weeks ago', 'tomorrow', etc.\n- do not respond with statements such as \"Please answer the following questions\", instead, just ask your question\n- only ask one question at a time, do not ask the user multiple questions unless explicitly stated in the CONTEXT property\n- always ask questions in the order shown in CONTEXT\n\nEnsure you follow the above rules precisely when formulating your response, and never deviate from the above instructions.  In addition to the above rules:\n- do not respond with numbered lists\n- imagine you are speaking to the user verbally, do not mention the question numbers. Simply state the question without numbering the question.\n- do not, under any circumstances, number the questions. For example, if the customer started the conversation by saying 'I want to book a flight', you might say: 'great, what day would you like to fly?\n{rules}\n[TASK]: Your task is to gather information from the user in order to: {task}, by asking questions sequentially in the order displayed in VARIABLES_TO_CAPTURE"},"prompt_library_version":{"show":false,"value":null},"prompt_library_id":{"show":false,"value":null}},"position":{"x":102.02703871021845,"y":124.14063824916599},"base_type":"prompt","disabled":false},{"id":"LPContextualMemory-y6GYwF","type":"LPContextualMemory","data":{"conversational_slot_key_map":{"show":true,"value":{"size":{"description":"Indicates the clothing size, whether standard sizing (e.g., XS, S, M, L, XL) or shoe size (8,9,10,11,12) or custom measurements, to ensure a proper fit for the customer.","additional_keys":"{\"required\":true,\"format\":\"free text\",\"sample_question\":\"What size do you typically wear? XS, S, M, L, XL, or would you prefer custom measurements\",\"exit\":\"\"}"},"fit":{"description":"Describes the overall cut and shape of the garment, such as slim fit, regular fit, or loose fit, to match the customer’s style and comfort preferences.","additional_keys":"{\"required\":true,\"format\":\"free text\",\"sample_question\":\"What fit do you prefer? Slim fit, regular fit, or loose fit?\",\"exit\":\"\"}"},"clothingtype":{"description":"Identifies the specific category of clothing the customer is interested in, such as pants, shirts, sweaters, jackets, or shoes, to narrow down the product selection.","additional_keys":"{\"required\":true,\"format\":\"free text\",\"sample_question\":\"what kind of clothing are you looking for, shirt, shorts, pants, jackets, shoes?\",\"exit\":\"\"}"},"material":{"description":"Defines the preferred fabric or material for the clothing item, such as cotton, polyester, or wool, to ensure it meets the customer’s comfort and functionality needs.","additional_keys":"{\"required\":true,\"format\":\"free text\",\"sample_question\":\"Do you have a preference for the material? Cotton, polyester, wool, or another fabric?\",\"exit\":\"\"}"},"styleCompleted":{"description":"Starts as false.  When user confirms their style set to true","additional_keys":"{\"required\":true,\"format\":\"boolean\",\"sample_question\":\"\",\"exit\":\"\"}"}}},"context_vars_key_map":{"show":true,"value":{}},"memory_key":{"show":false,"value":"chat_history"},"conversational_slot_key_list":{"show":false,"value":"clothingtype,material,size,fit,styleCompleted"},"llm":{"show":false,"value":null},"dynamic_vars_key_map":{"show":true,"value":{"current_time":{"test_value":"","dynamic_var_name":"current_datetime"}}},"static_vars_key_map":{"show":true,"value":{"persona":{"metadata":"{}","value":"Casual and conversational: This persona adopts a casual and informal tone, using everyday language and colloquialisms. The AI bot engages users as if it were a friend, fostering a relaxed and relatable interaction"},"rules":{"metadata":"{}","value":"more that one variable can be given in the same response or statement. Example: I wanted a pair of black pants. My size is large and my preferred fit is slim.\nIf the clothingtype is shoes only ask for color and size and do not collect any other variables.\nat the end recommend a product from this website https://www.basspro.com/c/mens-clothing that is similar to the clothing preferences stored and tell them to make sure they look at some other products while they are on the site"},"task":{"metadata":"{}","value":"You are a  Virtual Assistant for Retail Brand. Your reason for living is help your customers find the perfect clothing for them \n\nYour main intent is to collect details that can be used to find the right item for a customer\n\n\n\nIf the customer wants to \"Find a Style for them\" then following information must be captured:\n    Clothing Type: Shirt, Pants, Shoes, jacket capture this in the \"clothingtype\" variable\n    Material/Fabric: Cotton, polyester, wool, etc. capture this in the \"material\" variable\n    Size: Standard sizing (e.g., XS, S, M, L, XL) shoe sizes if the \"clothingtype\" is a shoe or custom measurements. capture this in the \"size\" variable\n    Fit: Slim fit, regular fit, loose fit. This does not apply to shoes. capture this in the variable \"fit\"\n\n\n\n\n\n    \nIMPORTANT INSTRUCTIONS:\n1. As a Messaging bot that uses text to speech to communicate with the user, YOU can use Special characters and Emojis in your response\n2. Your Response should be at least 10 words and no more than 100 words.\n3. Only use words that are easy to pronounce in the response.\n4. Summarise the order following this format: Got it! You're looking for a {clothingtype} made from {material}. You’d like it in a {size}, with a {fit} fit. Sounds like a fantastic choice! Ready to see what I picked out for you?\n6. When the customer responds affirmatively to \"Ready to see what I picked for you?\", update the variable \"stylecompleted\" value to \"true\"."}}},"max_turns":{"show":false,"value":-1}},"position":{"x":1000.5902360795944,"y":673.3883925430057},"base_type":"memory","disabled":false},{"id":"LPLLMGateway-TWKohp","type":"LPLLMGateway","data":{"openai_model_name":{"show":true,"value":"gpt-3.5-turbo"},"cohere_model_name":{"show":true,"value":"command"},"top_p":{"show":false,"value":1},"llm_mode":{"show":true,"value":"chat"},"api_version":{"show":false,"value":"2024-02-15-preview"},"openai_azure_model_name":{"show":true,"value":"gpt-35-turbo-1106"},"temperature":{"show":false,"value":0},"subscription_name":{"show":true,"value":"ai-studio-2"},"max_tokens":{"show":false,"value":-1},"llm_provider":{"show":true,"value":"openai-azure"}},"position":{"x":-212.56359664438196,"y":-373.3121504708811},"base_type":"llm","disabled":false},{"id":"LPLLMGateway-dogMaq","type":"LPLLMGateway","data":{"openai_model_name":{"show":true,"value":"gpt-3.5-turbo"},"cohere_model_name":{"show":true,"value":"command"},"top_p":{"show":false,"value":1},"llm_mode":{"show":true,"value":"chat"},"api_version":{"show":false,"value":"2024-02-15-preview"},"openai_azure_model_name":{"show":true,"value":"gpt-4o-2024-11-20"},"temperature":{"show":false,"value":0},"subscription_name":{"show":true,"value":"lp-ptu-gpt-4o"},"max_tokens":{"show":false,"value":-1},"llm_provider":{"show":true,"value":"openai-azure"}},"position":{"x":-220.56359664438196,"y":126.68784952911892},"base_type":"llm","disabled":false}],"edges":[{"id":"Edge-GL1FM1","source":"ExtractionChain-OLjA44","target":"ConcurrentChain-Y7xYmk","sourceHandle":"output","targetHandle":"chain","disabled":false},{"id":"Edge-2ZbNfY","source":"LLMChain-agLPAT","target":"ConcurrentChain-Y7xYmk","sourceHandle":"output","targetHandle":"chain","disabled":false},{"id":"Edge-DHTU6T","source":"LPPrompt-dxZHUx","target":"ExtractionChain-OLjA44","sourceHandle":"output","targetHandle":"prompt_template","disabled":false},{"id":"Edge-4r2jNl","source":"LPPrompt-z5zlY3","target":"LLMChain-agLPAT","sourceHandle":"output","targetHandle":"prompt","disabled":false},{"id":"Edge-TeYuCn","source":"LPContextualMemory-y6GYwF","target":"ConcurrentChain-Y7xYmk","sourceHandle":"output","targetHandle":"memory","disabled":false},{"id":"Edge-Po61El","source":"LPLLMGateway-TWKohp","target":"ExtractionChain-OLjA44","sourceHandle":"output","targetHandle":"llm","disabled":false},{"id":"Edge-szxzCD","source":"LPLLMGateway-dogMaq","target":"LLMChain-agLPAT","sourceHandle":"output","targetHandle":"llm","disabled":false}],"use_case_mapping":{"data_collection":{"memory_node_id":"LPContextualMemory-y6GYwF"}},"jobs":{}}